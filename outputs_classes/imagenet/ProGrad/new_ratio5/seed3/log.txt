***************
** Arguments **
***************
backbone: 
config_file: configs/trainers/ProGrad/vit_b16_ep50_batch4_c4.yaml
dataset_config_file: configs/datasets/imagenet.yaml
eval_only: True
head: 
load_epoch: 50
model_dir: output/base2new/train_base/imagenet/shots_16/ProGrad/vit_b16_ep50_batch4_c4/seed3
no_train: False
opts: ['LOSS.LAMBDA', '0.8', 'TRAINER.COOP.N_CTX', '4', 'TRAINER.COOP.CSC', 'False', 'TRAINER.COOP.CLASS_TOKEN_POSITION', 'end', 'DATASET.NUM_SHOTS', '16', 'DATASET.SUBSAMPLE_CLASSES', 'new_ratio5']
output_dir: output/base2new/test_new_ratio5/imagenet/shots_16/ProGrad/vit_b16_ep50_batch4_c4/seed3
resume: 
root: /mnt/hdd/DATA
seed: 3
source_domains: None
target_domains: None
trainer: ProGrad
transforms: None
************
** Config **
************
DATALOADER:
  K_TRANSFORMS: 1
  NUM_WORKERS: 8
  RETURN_IMG0: False
  TEST:
    BATCH_SIZE: 100
    SAMPLER: SequentialSampler
  TRAIN_U:
    BATCH_SIZE: 32
    N_DOMAIN: 0
    N_INS: 16
    SAME_AS_X: True
    SAMPLER: RandomSampler
  TRAIN_X:
    BATCH_SIZE: 4
    N_DOMAIN: 0
    N_INS: 16
    SAMPLER: RandomSampler
DATASET:
  ALL_AS_UNLABELED: False
  CIFAR_C_LEVEL: 1
  CIFAR_C_TYPE: 
  NAME: ImageNet
  NUM_LABELED: -1
  NUM_SHOTS: 16
  ROOT: /mnt/hdd/DATA
  SOURCE_DOMAINS: ()
  STL10_FOLD: -1
  SUBSAMPLE_CLASSES: new_ratio5
  TARGET_DOMAINS: ()
  VAL_PERCENT: 0.1
INPUT:
  COLORJITTER_B: 0.4
  COLORJITTER_C: 0.4
  COLORJITTER_H: 0.1
  COLORJITTER_S: 0.4
  CROP_PADDING: 4
  CUTOUT_LEN: 16
  CUTOUT_N: 1
  GB_K: 21
  GB_P: 0.5
  GN_MEAN: 0.0
  GN_STD: 0.15
  INTERPOLATION: bicubic
  NO_TRANSFORM: False
  PIXEL_MEAN: [0.48145466, 0.4578275, 0.40821073]
  PIXEL_STD: [0.26862954, 0.26130258, 0.27577711]
  RANDAUGMENT_M: 10
  RANDAUGMENT_N: 2
  RGS_P: 0.2
  SIZE: (224, 224)
  TRANSFORMS: ('random_resized_crop', 'random_flip', 'normalize')
LOSS:
  ALPHA: 0.0
  GM: False
  LAMBDA: 0.8
  NAME: prograd
  T: 1.0
MODEL:
  BACKBONE:
    NAME: ViT-B/16
    PRETRAINED: True
  HEAD:
    ACTIVATION: relu
    BN: True
    DROPOUT: 0.0
    HIDDEN_LAYERS: ()
    NAME: 
  INIT_WEIGHTS: 
OPTIM:
  ADAM_BETA1: 0.9
  ADAM_BETA2: 0.999
  BASE_LR_MULT: 0.1
  GAMMA: 0.1
  LR: 0.002
  LR_SCHEDULER: cosine
  MAX_EPOCH: 50
  MOMENTUM: 0.9
  NAME: sgd
  NEW_LAYERS: ()
  RMSPROP_ALPHA: 0.99
  SGD_DAMPNING: 0
  SGD_NESTEROV: False
  STAGED_LR: False
  STEPSIZE: (-1,)
  WARMUP_CONS_LR: 1e-05
  WARMUP_EPOCH: 1
  WARMUP_MIN_LR: 1e-05
  WARMUP_RECOUNT: True
  WARMUP_TYPE: constant
  WEIGHT_DECAY: 0.0005
OUTPUT_DIR: output/base2new/test_new_ratio5/imagenet/shots_16/ProGrad/vit_b16_ep50_batch4_c4/seed3
RESUME: 
SEED: 3
TEST:
  COMPUTE_CMAT: False
  EVALUATOR: Classification
  FINAL_MODEL: last_step
  NO_TEST: False
  PER_CLASS_RESULT: False
  SPLIT: test
TRAIN:
  CHECKPOINT_FREQ: 0
  COUNT_ITER: train_x
  PRINT_FREQ: 20
TRAINER:
  CG:
    ALPHA_D: 0.5
    ALPHA_F: 0.5
    EPS_D: 1.0
    EPS_F: 1.0
  COCOOP:
    CTX_INIT: False
    N_CTX: 16
    PREC: fp16
  COOP:
    ALPHA: 1.0
    CLASS_TOKEN_POSITION: end
    CSC: False
    CTX_INIT: False
    N_CTX: 4
    PREC: fp16
  DAEL:
    CONF_THRE: 0.95
    STRONG_TRANSFORMS: ()
    WEIGHT_U: 0.5
  DDAIG:
    ALPHA: 0.5
    CLAMP: False
    CLAMP_MAX: 1.0
    CLAMP_MIN: -1.0
    G_ARCH: 
    LMDA: 0.3
    WARMUP: 0
  ENTMIN:
    LMDA: 0.001
  FIXMATCH:
    CONF_THRE: 0.95
    STRONG_TRANSFORMS: ()
    WEIGHT_U: 1.0
  M3SDA:
    LMDA: 0.5
    N_STEP_F: 4
  MCD:
    N_STEP_F: 4
  MEANTEA:
    EMA_ALPHA: 0.999
    RAMPUP: 5
    WEIGHT_U: 1.0
  MIXMATCH:
    MIXUP_BETA: 0.75
    RAMPUP: 20000
    TEMP: 2.0
    WEIGHT_U: 100.0
  MME:
    LMDA: 0.1
  NAME: ProGrad
  SE:
    CONF_THRE: 0.95
    EMA_ALPHA: 0.999
    RAMPUP: 300
USE_CUDA: True
VERBOSE: True
VERSION: 1
Collecting env info ...
** System info **
PyTorch version: 2.2.2+cu121
Is debug build: False
CUDA used to build PyTorch: 12.1
ROCM used to build PyTorch: N/A

OS: Debian GNU/Linux 12 (bookworm) (x86_64)
GCC version: (Debian 12.2.0-14) 12.2.0
Clang version: Could not collect
CMake version: Could not collect
Libc version: glibc-2.36

Python version: 3.11.2 (main, Mar 13 2023, 12:18:29) [GCC 12.2.0] (64-bit runtime)
Python platform: Linux-6.5.13-3-pve-x86_64-with-glibc2.36
Is CUDA available: True
CUDA runtime version: 11.8.89
CUDA_MODULE_LOADING set to: LAZY
GPU models and configuration: 
GPU 0: NVIDIA A800 80GB PCIe
GPU 1: NVIDIA A800 80GB PCIe

Nvidia driver version: 525.147.05
cuDNN version: Could not collect
HIP runtime version: N/A
MIOpen runtime version: N/A
Is XNNPACK available: True

CPU:
Architecture:                       x86_64
CPU op-mode(s):                     32-bit, 64-bit
Address sizes:                      46 bits physical, 57 bits virtual
Byte Order:                         Little Endian
CPU(s):                             64
On-line CPU(s) list:                18,20,22,23,25-27,29,31,32,34,37,46-49
Off-line CPU(s) list:               0-17,19,21,24,28,30,33,35,36,38-45,50-63
Vendor ID:                          GenuineIntel
Model name:                         Intel(R) Xeon(R) Gold 6326 CPU @ 2.90GHz
CPU family:                         6
Model:                              106
Thread(s) per core:                 2
Core(s) per socket:                 16
Socket(s):                          2
Stepping:                           6
CPU(s) scaling MHz:                 97%
CPU max MHz:                        3500.0000
CPU min MHz:                        800.0000
BogoMIPS:                           5800.00
Flags:                              fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 invpcid_single intel_ppin ssbd mba ibrs ibpb stibp ibrs_enhanced tpr_shadow flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm rdt_a avx512f avx512dq rdseed adx smap avx512ifma clflushopt clwb intel_pt avx512cd sha_ni avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local split_lock_detect wbnoinvd dtherm ida arat pln pts vnmi avx512vbmi umip pku ospke avx512_vbmi2 gfni vaes vpclmulqdq avx512_vnni avx512_bitalg tme avx512_vpopcntdq la57 rdpid fsrm md_clear pconfig flush_l1d arch_capabilities
Virtualization:                     VT-x
L1d cache:                          1.5 MiB (32 instances)
L1i cache:                          1 MiB (32 instances)
L2 cache:                           40 MiB (32 instances)
L3 cache:                           48 MiB (2 instances)
NUMA node(s):                       2
NUMA node0 CPU(s):                  0-15,32-47
NUMA node1 CPU(s):                  16-31,48-63
Vulnerability Gather data sampling: Vulnerable: No microcode
Vulnerability Itlb multihit:        Not affected
Vulnerability L1tf:                 Not affected
Vulnerability Mds:                  Not affected
Vulnerability Meltdown:             Not affected
Vulnerability Mmio stale data:      Mitigation; Clear CPU buffers; SMT vulnerable
Vulnerability Retbleed:             Not affected
Vulnerability Spec rstack overflow: Not affected
Vulnerability Spec store bypass:    Mitigation; Speculative Store Bypass disabled via prctl
Vulnerability Spectre v1:           Mitigation; usercopy/swapgs barriers and __user pointer sanitization
Vulnerability Spectre v2:           Mitigation; Enhanced / Automatic IBRS, IBPB conditional, RSB filling, PBRSB-eIBRS SW sequence
Vulnerability Srbds:                Not affected
Vulnerability Tsx async abort:      Not affected

Versions of relevant libraries:
[pip3] flake8==3.7.9
[pip3] numpy==1.26.4
[pip3] torch==2.2.2
[pip3] torchaudio==2.2.2
[pip3] torchvision==0.17.2
[pip3] triton==2.2.0
[conda] Could not collect
        Pillow (10.3.0)

Loading trainer: ProGrad
Loading dataset: ImageNet
Loading preprocessed few-shot data from /mnt/hdd/DATA/imagenet/split_fewshot/shot_16_shuffled-seed_3.pkl
SUBSAMPLE NEW_RATIO5 CLASSES!
Building transform_train
+ random resized crop (size=(224, 224))
+ random flip
+ to torch tensor of range [0, 1]
+ normalization (mean=[0.48145466, 0.4578275, 0.40821073], std=[0.26862954, 0.26130258, 0.27577711])
Building transform_test
+ resize the smaller edge to 224
+ 224x224 center crop
+ to torch tensor of range [0, 1]
+ normalization (mean=[0.48145466, 0.4578275, 0.40821073], std=[0.26862954, 0.26130258, 0.27577711])
***** Dataset statistics *****
  Dataset: ImageNet
  # classes: 500
  # train_x: 8,000
  # val: 25,000
  # test: 25,000
Loading CLIP (backbone: ViT-B/16)
Building zeroshot CLIP
Loading CLIP (backbone: ViT-B/16)
Prompts: ['a photo of a crate.', 'a photo of a Norwich Terrier.', 'a photo of a fountain.', 'a photo of a Pomeranian.', 'a photo of a toaster.', 'a photo of a smooth green snake.', 'a photo of a fireboat.', 'a photo of a triceratops.', 'a photo of a barometer.', 'a photo of a vespa.', 'a photo of a Papillon.', 'a photo of a car wheel.', 'a photo of a computer mouse.', 'a photo of a lakeshore.', 'a photo of a television.', 'a photo of a drumstick.', 'a photo of a grasshopper.', 'a photo of a digital clock.', 'a photo of a coral reef.', 'a photo of a orangutan.', 'a photo of a Miniature Schnauzer.', 'a photo of a Newfoundland dog.', 'a photo of a CD player.', 'a photo of a cabbage.', 'a photo of a Australian Terrier.', 'a photo of a radio telescope.', 'a photo of a pan flute.', 'a photo of a sink.', 'a photo of a Petri dish.', 'a photo of a French horn.', 'a photo of a Italian Greyhound.', 'a photo of a otter.', 'a photo of a tile roof.', 'a photo of a geyser.', 'a photo of a school bus.', 'a photo of a slot machine.', 'a photo of a drilling rig.', 'a photo of a vase.', 'a photo of a red-breasted merganser.', 'a photo of a dog sled.', 'a photo of a coucal.', 'a photo of a polar bear.', 'a photo of a swing.', 'a photo of a baboon.', 'a photo of a Redbone Coonhound.', 'a photo of a sunglasses.', 'a photo of a lipstick.', 'a photo of a eastern hog-nosed snake.', 'a photo of a racket.', 'a photo of a knee pad.', 'a photo of a carbonara.', 'a photo of a St. Bernard.', 'a photo of a garter snake.', 'a photo of a vulture.', 'a photo of a minivan.', 'a photo of a longhorn beetle.', 'a photo of a sombrero.', 'a photo of a popsicle.', 'a photo of a sleeping bag.', 'a photo of a sock.', 'a photo of a zebra.', 'a photo of a bison.', 'a photo of a teapot.', 'a photo of a fountain pen.', 'a photo of a bighorn sheep.', 'a photo of a breakwater.', 'a photo of a candle.', 'a photo of a oscilloscope.', 'a photo of a clothes iron.', 'a photo of a soap dispenser.', 'a photo of a accordion.', 'a photo of a drink pitcher.', 'a photo of a hermit crab.', 'a photo of a teddy bear.', 'a photo of a boathouse.', 'a photo of a Alaskan tundra wolf.', 'a photo of a bubble.', 'a photo of a water bottle.', 'a photo of a sliding door.', 'a photo of a house finch.', 'a photo of a cassette.', 'a photo of a baseball player.', 'a photo of a wallaby.', 'a photo of a shoji screen / room divider.', 'a photo of a American robin.', 'a photo of a hippopotamus.', 'a photo of a photocopier.', 'a photo of a ostrich.', 'a photo of a cowboy boot.', 'a photo of a Chesapeake Bay Retriever.', 'a photo of a mobile phone.', 'a photo of a safety pin.', 'a photo of a beer glass.', 'a photo of a European polecat.', 'a photo of a castle.', 'a photo of a oxygen mask.', 'a photo of a Christmas stocking.', 'a photo of a umbrella.', 'a photo of a banded gecko.', 'a photo of a Old English Sheepdog.', 'a photo of a mongoose.', 'a photo of a weasel.', 'a photo of a common gallinule.', 'a photo of a viaduct.', 'a photo of a Yorkshire Terrier.', 'a photo of a one-piece bathing suit.', 'a photo of a mosque.', 'a photo of a syringe.', 'a photo of a Staffordshire Bull Terrier.', 'a photo of a ring-tailed lemur.', 'a photo of a American Staffordshire Terrier.', 'a photo of a Boston Terrier.', 'a photo of a weevil.', 'a photo of a neck brace.', 'a photo of a sea cucumber.', 'a photo of a ice cream.', 'a photo of a crayfish.', 'a photo of a trimaran.', 'a photo of a sea snake.', 'a photo of a green mamba.', 'a photo of a brass memorial plaque.', 'a photo of a shield.', 'a photo of a Irish Wolfhound.', 'a photo of a joystick.', 'a photo of a pig.', 'a photo of a partridge.', 'a photo of a French Bulldog.', 'a photo of a missile.', 'a photo of a african grey parrot.', 'a photo of a graduation cap.', 'a photo of a bell pepper.', 'a photo of a screwdriver.', 'a photo of a goldfish.', 'a photo of a butcher shop.', 'a photo of a pillow.', 'a photo of a pajamas.', 'a photo of a tick.', 'a photo of a analog clock.', 'a photo of a black-footed ferret.', 'a photo of a frying pan.', 'a photo of a tricycle.', 'a photo of a dishwasher.', 'a photo of a dhole.', 'a photo of a tandem bicycle.', 'a photo of a traffic or street sign.', 'a photo of a nematode.', 'a photo of a hatchet.', 'a photo of a Angora rabbit.', 'a photo of a titi monkey.', 'a photo of a rose hip.', 'a photo of a jay.', 'a photo of a abacus.', 'a photo of a ant.', 'a photo of a Shih Tzu.', 'a photo of a chiton.', 'a photo of a T-shirt.', 'a photo of a lawn mower.', 'a photo of a steam locomotive.', 'a photo of a volleyball.', 'a photo of a mixing bowl.', 'a photo of a promontory.', 'a photo of a reflex camera.', 'a photo of a perfume.', 'a photo of a ox.', 'a photo of a Asian elephant.', 'a photo of a Saharan horned viper.', 'a photo of a ptarmigan.', 'a photo of a pomegranate.', 'a photo of a tree frog.', 'a photo of a alligator lizard.', 'a photo of a paintbrush.', 'a photo of a coral fungus.', 'a photo of a indigo bunting.', 'a photo of a desert grassland whiptail lizard.', 'a photo of a clownfish.', 'a photo of a barn.', 'a photo of a baby bib.', 'a photo of a cassette player.', 'a photo of a cockroach.', 'a photo of a garbage truck.', 'a photo of a red admiral butterfly.', 'a photo of a apron.', 'a photo of a little blue heron.', 'a photo of a burrito.', 'a photo of a waffle iron.', 'a photo of a bittern bird.', 'a photo of a kit fox.', 'a photo of a goldfinch.', 'a photo of a bell tower.', 'a photo of a African bush elephant.', 'a photo of a planetarium.', 'a photo of a moped.', 'a photo of a throne.', 'a photo of a toy store.', 'a photo of a snail.', 'a photo of a dam.', 'a photo of a impala (antelope).', 'a photo of a moving van.', 'a photo of a ruddy turnstone.', 'a photo of a leaf beetle.', 'a photo of a acoustic guitar.', 'a photo of a baguette.', 'a photo of a marmot.', 'a photo of a ruffed grouse.', 'a photo of a golf cart.', 'a photo of a tennis ball.', 'a photo of a chimpanzee.', 'a photo of a cottontail rabbit.', 'a photo of a honeycomb.', 'a photo of a dingo.', 'a photo of a barber chair.', 'a photo of a radiator.', 'a photo of a Briard.', 'a photo of a gong.', 'a photo of a Weimaraner.', 'a photo of a red fox.', 'a photo of a solar thermal collector.', 'a photo of a shoe store.', 'a photo of a acorn.', 'a photo of a Scottish Terrier.', 'a photo of a box turtle.', 'a photo of a American alligator.', 'a photo of a poncho.', 'a photo of a spatula.', 'a photo of a flatworm.', 'a photo of a soup bowl.', 'a photo of a pelican.', 'a photo of a palace.', 'a photo of a Golden Retriever.', 'a photo of a pier.', 'a photo of a trolleybus.', 'a photo of a airplane wing.', 'a photo of a car mirror.', 'a photo of a farm plow.', 'a photo of a husky.', 'a photo of a Miniature Poodle.', 'a photo of a starfish.', 'a photo of a hair spray.', 'a photo of a German Shorthaired Pointer.', 'a photo of a fly.', 'a photo of a Whippet.', 'a photo of a valley.', 'a photo of a brown bear.', 'a photo of a water buffalo.', 'a photo of a plastic bag.', 'a photo of a sea anemone.', 'a photo of a Saluki.', 'a photo of a Samoyed.', 'a photo of a plunger.', 'a photo of a llama.', 'a photo of a Scottish Deerhound.', 'a photo of a odometer.', 'a photo of a projector.', 'a photo of a bucket.', 'a photo of a coffeemaker.', 'a photo of a loggerhead sea turtle.', 'a photo of a Siberian Husky.', 'a photo of a leafhopper.', 'a photo of a rock crab.', 'a photo of a motorboat.', 'a photo of a stingray.', 'a photo of a canoe.', 'a photo of a Band-Aid.', 'a photo of a freight car.', 'a photo of a container ship.', 'a photo of a Arctic fox.', 'a photo of a English foxhound.', 'a photo of a quill.', 'a photo of a four-poster bed.', 'a photo of a Kerry Blue Terrier.', 'a photo of a king penguin.', 'a photo of a remote control.', 'a photo of a langur.', 'a photo of a medicine cabinet.', 'a photo of a howler monkey.', 'a photo of a mop.', 'a photo of a balance beam.', 'a photo of a chain.', 'a photo of a steel drum.', 'a photo of a cello.', 'a photo of a pizza.', 'a photo of a tabby cat.', 'a photo of a lifeboat.', 'a photo of a laptop computer.', 'a photo of a artichoke.', 'a photo of a silver salmon.', 'a photo of a washing machine.', 'a photo of a coffee mug.', 'a photo of a agaric.', 'a photo of a black-and-white colobus.', 'a photo of a Dungeness crab.', 'a photo of a broccoli.', "a photo of a potter's wheel.", 'a photo of a crutch.', 'a photo of a Polaroid camera.', 'a photo of a Boxer.', 'a photo of a tripod.', 'a photo of a Bouvier des Flandres dog.', 'a photo of a scoreboard.', 'a photo of a Australian Silky Terrier.', 'a photo of a railroad car.', 'a photo of a leatherback sea turtle.', 'a photo of a corn.', 'a photo of a breastplate.', 'a photo of a measuring cup.', 'a photo of a computer keyboard.', 'a photo of a modem.', 'a photo of a dunlin.', 'a photo of a Flat-Coated Retriever.', 'a photo of a ford model t.', 'a photo of a Black and Tan Coonhound.', 'a photo of a wombat.', 'a photo of a flute.', 'a photo of a jeep.', 'a photo of a automated teller machine.', 'a photo of a dough.', 'a photo of a mailbox.', 'a photo of a mosquito net.', 'a photo of a muzzle.', 'a photo of a stick insect.', 'a photo of a wooden spoon.', 'a photo of a dock.', "a photo of a yellow lady's slipper.", 'a photo of a Bedlington Terrier.', 'a photo of a pinwheel.', 'a photo of a meerkat.', 'a photo of a great egret.', 'a photo of a arabian camel.', 'a photo of a salt shaker.', 'a photo of a turnstile.', 'a photo of a daisy.', 'a photo of a suit.', 'a photo of a white stork.', 'a photo of a spider web.', 'a photo of a clogs.', 'a photo of a bullock cart.', 'a photo of a ski.', 'a photo of a English Springer Spaniel.', 'a photo of a cricket insect.', 'a photo of a siamang.', 'a photo of a Komondor.', 'a photo of a megalith.', 'a photo of a website.', 'a photo of a hockey puck.', 'a photo of a centipede.', 'a photo of a parachute.', 'a photo of a bow tie.', 'a photo of a sea urchin.', 'a photo of a black stork.', 'a photo of a china cabinet.', 'a photo of a American bullfrog.', 'a photo of a hair clip.', 'a photo of a face powder.', 'a photo of a pipe organ.', 'a photo of a binoculars.', 'a photo of a wok.', 'a photo of a flagpole.', 'a photo of a digital watch.', 'a photo of a lionfish.', 'a photo of a maze.', 'a photo of a pot pie.', 'a photo of a chiffonier.', 'a photo of a toilet seat.', 'a photo of a prison.', 'a photo of a through arch bridge.', 'a photo of a hair wig.', 'a photo of a platypus.', 'a photo of a grand piano.', 'a photo of a Pekingese.', 'a photo of a horse chestnut seed.', 'a photo of a missile.', 'a photo of a menu.', 'a photo of a torch.', 'a photo of a armadillo.', 'a photo of a sea lion.', 'a photo of a orange.', 'a photo of a shipwreck.', 'a photo of a macaw.', 'a photo of a oil filter.', 'a photo of a porcupine.', 'a photo of a mousetrap.', 'a photo of a jeans.', 'a photo of a power drill.', 'a photo of a hammerhead shark.', 'a photo of a hyena.', 'a photo of a tank.', 'a photo of a violin.', 'a photo of a hot tub.', 'a photo of a golf ball.', 'a photo of a sloth bear.', 'a photo of a backpack.', 'a photo of a cauliflower.', 'a photo of a dust jacket.', 'a photo of a rotary dial telephone.', 'a photo of a sweatshirt.', 'a photo of a gondola.', 'a photo of a mortar and pestle.', 'a photo of a Rhodesian Ridgeback.', 'a photo of a gas pump.', 'a photo of a gas mask or respirator.', 'a photo of a police van.', 'a photo of a Otterhound.', 'a photo of a overskirt.', 'a photo of a Mexican hairless dog (xoloitzcuintli).', 'a photo of a ping-pong ball.', 'a photo of a Leonberger.', 'a photo of a hoop skirt.', 'a photo of a grey fox.', 'a photo of a catamaran.', 'a photo of a mud turtle.', 'a photo of a Great Dane.', 'a photo of a hunting bow.', 'a photo of a Great Pyrenees dog.', 'a photo of a Persian cat.', 'a photo of a bridegroom.', 'a photo of a obelisk.', 'a photo of a slip-on shoe.', 'a photo of a duck.', 'a photo of a trombone.', 'a photo of a marmoset.', 'a photo of a Rottweiler.', 'a photo of a station wagon.', 'a photo of a pencil sharpener.', 'a photo of a Bluetick Coonhound.', 'a photo of a strainer.', 'a photo of a magpie.', 'a photo of a loupe magnifying glass.', 'a photo of a scarf.', 'a photo of a cannon.', 'a photo of a movie theater.', 'a photo of a hare.', 'a photo of a Entlebucher Sennenhund.', 'a photo of a assault rifle.', 'a photo of a great white shark.', 'a photo of a badger.', 'a photo of a wolf spider.', 'a photo of a common squirrel monkey.', 'a photo of a isopod.', 'a photo of a green iguana.', 'a photo of a vine snake.', 'a photo of a mountain bike.', 'a photo of a monarch butterfly.', 'a photo of a bell or wind chime.', 'a photo of a hair dryer.', 'a photo of a table lamp.', 'a photo of a cliff dwelling.', 'a photo of a hamper.', 'a photo of a coyote.', 'a photo of a prairie grouse.', 'a photo of a abaya.', 'a photo of a Lhasa Apso.', 'a photo of a drum.', 'a photo of a Egyptian Mau.', 'a photo of a minibus.', 'a photo of a piggy bank.', 'a photo of a snoek fish.', 'a photo of a American coot.', 'a photo of a plate.', 'a photo of a Cardigan Welsh Corgi.', 'a photo of a Japanese Chin.', 'a photo of a window shade.', 'a photo of a couch.', 'a photo of a cardigan.', 'a photo of a hand-held computer.', 'a photo of a semi-trailer truck.', 'a photo of a Irish Water Spaniel.', 'a photo of a axolotl.', 'a photo of a borzoi.', 'a photo of a totem pole.', 'a photo of a rotisserie.', 'a photo of a meatloaf.', 'a photo of a limpkin.', 'a photo of a hammer.', 'a photo of a snow leopard.', 'a photo of a airship.', 'a photo of a hen of the woods mushroom.', 'a photo of a church.', 'a photo of a tobacco shop.', 'a photo of a stone wall.', 'a photo of a Welsh Springer Spaniel.', 'a photo of a beaver.', 'a photo of a goblet.', 'a photo of a purse.', 'a photo of a handkerchief.', 'a photo of a beer bottle.', 'a photo of a pufferfish.', 'a photo of a cauldron.', 'a photo of a harp.', 'a photo of a corkscrew.', 'a photo of a stopwatch.', 'a photo of a chain-link fence.', 'a photo of a shopping cart.', 'a photo of a grey whale.', 'a photo of a shovel.', 'a photo of a rapeseed.', 'a photo of a Granny Smith apple.', 'a photo of a cheetah.', 'a photo of a stage.', 'a photo of a American black bear.', 'a photo of a convertible.']
Building custom CLIP
Initializing a generic context
Initial context: "X X X X"
Number of context words (tokens): 4
Turning off gradients in ZS Clip model
Turning off gradients in CoOp model
Loading evaluator: Classification
Loading weights to prompt_learner from "output/base2new/train_base/imagenet/shots_16/ProGrad/vit_b16_ep50_batch4_c4/seed3/prompt_learner/model.pth.tar-50" (epoch = 50)
Do evaluation on test set
=> result
* total: 25,000
* correct: 19,435
* accuracy: 77.74%
* error: 22.26%
* macro_f1: 77.31%
