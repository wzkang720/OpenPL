***************
** Arguments **
***************
backbone: 
config_file: configs/trainers/CoOp/vit_b16_ep50_bs4.yaml
cross_dataset: False
dataset_config_file: configs/datasets/imagenet.yaml
dataset_var: SUN397
eval_only: True
head: 
load_epoch: None
mix_distribution: False
model_dir: 
no_train: False
opts: ['DATASET.SUBSAMPLE_CLASSES', 'base']
output_dir: output/evaluation/ZeroshotCLIP/vit_b16_ep50_bs4/SUN397/base/seed1
resume: 
root: /home/wzk/DATA
seed: 1
source_domains: None
target_domains: None
trainer: ZeroshotCLIP
transforms: None
************
** Config **
************
CROSS_DATASET: True
DATALOADER:
  K_TRANSFORMS: 1
  NUM_WORKERS: 8
  RETURN_IMG0: False
  TEST:
    BATCH_SIZE: 100
    SAMPLER: SequentialSampler
  TRAIN_U:
    BATCH_SIZE: 32
    N_DOMAIN: 0
    N_INS: 16
    SAME_AS_X: True
    SAMPLER: RandomSampler
  TRAIN_X:
    BATCH_SIZE: 4
    N_DOMAIN: 0
    N_INS: 16
    SAMPLER: RandomSampler
DATASET:
  ALL_AS_UNLABELED: False
  CIFAR_C_LEVEL: 1
  CIFAR_C_TYPE: 
  NAME: ImageNet
  NAME_VAR: SUN397
  NUM_LABELED: -1
  NUM_SHOTS: -1
  PROMPT: a photo of a _.
  ROOT: /home/wzk/DATA
  SOURCE_DOMAINS: ()
  STL10_FOLD: -1
  SUBSAMPLE_CLASSES: base
  TARGET_DOMAINS: ()
  VAL_PERCENT: 0.1
INPUT:
  COLORJITTER_B: 0.4
  COLORJITTER_C: 0.4
  COLORJITTER_H: 0.1
  COLORJITTER_S: 0.4
  CROP_PADDING: 4
  CUTOUT_LEN: 16
  CUTOUT_N: 1
  GB_K: 21
  GB_P: 0.5
  GN_MEAN: 0.0
  GN_STD: 0.15
  INTERPOLATION: bicubic
  NO_TRANSFORM: False
  PIXEL_MEAN: [0.48145466, 0.4578275, 0.40821073]
  PIXEL_STD: [0.26862954, 0.26130258, 0.27577711]
  RANDAUGMENT_M: 10
  RANDAUGMENT_N: 2
  RGS_P: 0.2
  RRCROP_SCALE: (0.08, 1.0)
  SIZE: (224, 224)
  TRANSFORMS: ('random_resized_crop', 'random_flip', 'normalize')
LOSS:
  ALPHA: 0.0
  GM: False
  LAMBDA: 1.0
  NAME: 
  T: 1.0
MIX_DISTRIBUTION: False
MODEL:
  BACKBONE:
    NAME: ViT-B/16
    PRETRAINED: True
  HEAD:
    ACTIVATION: relu
    BN: True
    DROPOUT: 0.0
    HIDDEN_LAYERS: ()
    NAME: 
  INIT_WEIGHTS: 
OPTIM:
  ADAM_BETA1: 0.9
  ADAM_BETA2: 0.999
  BASE_LR_MULT: 0.1
  GAMMA: 0.1
  LR: 0.002
  LR_SCHEDULER: cosine
  MAX_EPOCH: 50
  MOMENTUM: 0.9
  NAME: sgd
  NEW_LAYERS: ()
  RMSPROP_ALPHA: 0.99
  SGD_DAMPNING: 0
  SGD_NESTEROV: False
  STAGED_LR: False
  STEPSIZE: (-1,)
  WARMUP_CONS_LR: 1e-05
  WARMUP_EPOCH: 1
  WARMUP_MIN_LR: 1e-05
  WARMUP_RECOUNT: True
  WARMUP_TYPE: constant
  WEIGHT_DECAY: 0.0005
OUTPUT_DIR: output/evaluation/ZeroshotCLIP/vit_b16_ep50_bs4/SUN397/base/seed1
RESUME: 
SEED: 1
TEST:
  COMPUTE_CMAT: False
  EVALUATOR: Classification
  FINAL_MODEL: last_step
  NO_TEST: False
  PER_CLASS_RESULT: False
  SPLIT: test
TRAIN:
  CHECKPOINT_FREQ: 0
  COUNT_ITER: train_x
  PRINT_FREQ: 20
TRAINER:
  CDAC:
    CLASS_LR_MULTI: 10
    P_THRESH: 0.95
    RAMPUP_COEF: 30
    RAMPUP_ITRS: 1000
    STRONG_TRANSFORMS: ()
    TOPK_MATCH: 5
  COCOOP:
    CTX_INIT: 
    N_CTX: 16
    PREC: fp16
  COOP:
    CLASS_TOKEN_POSITION: end
    CSC: False
    CTX_INIT: 
    N_CTX: 16
    PREC: fp16
  CROSSGRAD:
    ALPHA_D: 0.5
    ALPHA_F: 0.5
    EPS_D: 1.0
    EPS_F: 1.0
  DAEL:
    CONF_THRE: 0.95
    STRONG_TRANSFORMS: ()
    WEIGHT_U: 0.5
  DAELDG:
    CONF_THRE: 0.95
    STRONG_TRANSFORMS: ()
    WEIGHT_U: 0.5
  DDAIG:
    ALPHA: 0.5
    CLAMP: False
    CLAMP_MAX: 1.0
    CLAMP_MIN: -1.0
    G_ARCH: 
    LMDA: 0.3
    WARMUP: 0
  DOMAINMIX:
    ALPHA: 1.0
    BETA: 1.0
    TYPE: crossdomain
  ENTMIN:
    LMDA: 0.001
  FIXMATCH:
    CONF_THRE: 0.95
    STRONG_TRANSFORMS: ()
    WEIGHT_U: 1.0
  IVLP:
    CTX_INIT: a photo of a
    N_CTX_TEXT: 2
    N_CTX_VISION: 2
    PREC: fp16
    PROMPT_DEPTH_TEXT: 9
    PROMPT_DEPTH_VISION: 9
  LP:
    PREC: fp16
    PROMPT: A photo of a {cls_name}
  M3SDA:
    LMDA: 0.5
    N_STEP_F: 4
  MAPLE:
    CTX_INIT: a photo of a
    N_CTX: 4
    PREC: fp16
    PROMPT_DEPTH: 9
  MCD:
    N_STEP_F: 4
  MEANTEACHER:
    EMA_ALPHA: 0.999
    RAMPUP: 5
    WEIGHT_U: 1.0
  MIXMATCH:
    MIXUP_BETA: 0.75
    RAMPUP: 20000
    TEMP: 2.0
    WEIGHT_U: 100.0
  MME:
    LMDA: 0.1
  NAME: ZeroshotCLIP
  PROMPTSRC:
    CTX_INIT: a photo of a
    GPA_MEAN: 15
    GPA_STD: 1
    IMAGE_LOSS_WEIGHT: 10
    N_CTX_TEXT: 4
    N_CTX_VISION: 4
    PREC: fp16
    PROMPT_DEPTH_TEXT: 9
    PROMPT_DEPTH_VISION: 9
    TEXT_LOSS_WEIGHT: 25
  ProDA:
    N_CTX: 16
    N_PROMPT: 32
    PREC: fp16
  RPO:
    CTX_INIT: 
    K: 1
    PREC: fp16
  SE:
    CONF_THRE: 0.95
    EMA_ALPHA: 0.999
    RAMPUP: 300
  VPT:
    CTX_INIT: a photo of a
    N_CTX_VISION: 2
    PREC: fp16
    PROMPT_DEPTH_VISION: 1
USE_CUDA: True
VERBOSE: True
VERSION: 1
Collecting env info ...
** System info **
PyTorch version: 2.4.1
Is debug build: False
CUDA used to build PyTorch: 12.1
ROCM used to build PyTorch: N/A

OS: Ubuntu 22.04.4 LTS (x86_64)
GCC version: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
Clang version: Could not collect
CMake version: Could not collect
Libc version: glibc-2.35

Python version: 3.8.19 (default, Mar 20 2024, 19:58:24)  [GCC 11.2.0] (64-bit runtime)
Python platform: Linux-6.8.0-40-generic-x86_64-with-glibc2.17
Is CUDA available: True
CUDA runtime version: Could not collect
CUDA_MODULE_LOADING set to: LAZY
GPU models and configuration: 
GPU 0: NVIDIA RTX 6000 Ada Generation
GPU 1: NVIDIA RTX 6000 Ada Generation
GPU 2: NVIDIA RTX 6000 Ada Generation
GPU 3: NVIDIA RTX 6000 Ada Generation
GPU 4: NVIDIA RTX 6000 Ada Generation
GPU 5: NVIDIA RTX 6000 Ada Generation
GPU 6: NVIDIA RTX 6000 Ada Generation
GPU 7: NVIDIA RTX 6000 Ada Generation

Nvidia driver version: 535.183.01
cuDNN version: Could not collect
HIP runtime version: N/A
MIOpen runtime version: N/A
Is XNNPACK available: True

CPU:
Architecture:                         x86_64
CPU op-mode(s):                       32-bit, 64-bit
Address sizes:                        52 bits physical, 57 bits virtual
Byte Order:                           Little Endian
CPU(s):                               96
On-line CPU(s) list:                  0-95
Vendor ID:                            AuthenticAMD
Model name:                           AMD EPYC 9754 128-Core Processor
CPU family:                           25
Model:                                160
Thread(s) per core:                   1
Core(s) per socket:                   48
Socket(s):                            2
Stepping:                             2
Frequency boost:                      enabled
CPU max MHz:                          3100.3411
CPU min MHz:                          1500.0000
BogoMIPS:                             4492.93
Flags:                                fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good amd_lbr_v2 nopl nonstop_tsc cpuid extd_apicid aperfmperf rapl pni pclmulqdq monitor ssse3 fma cx16 pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 hw_pstate ssbd mba perfmon_v2 ibrs ibpb stibp ibrs_enhanced vmmcall fsgsbase bmi1 avx2 smep bmi2 erms invpcid cqm rdt_a avx512f avx512dq rdseed adx smap avx512ifma clflushopt clwb avx512cd sha_ni avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local user_shstk avx512_bf16 clzero irperf xsaveerptr rdpru wbnoinvd amd_ppin cppc arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold avic v_vmsave_vmload vgif x2avic v_spec_ctrl vnmi avx512vbmi umip pku ospke avx512_vbmi2 gfni vaes vpclmulqdq avx512_vnni avx512_bitalg avx512_vpopcntdq la57 rdpid overflow_recov succor smca fsrm flush_l1d debug_swap
Virtualization:                       AMD-V
L1d cache:                            3 MiB (96 instances)
L1i cache:                            3 MiB (96 instances)
L2 cache:                             96 MiB (96 instances)
L3 cache:                             512 MiB (32 instances)
NUMA node(s):                         2
NUMA node0 CPU(s):                    0-47
NUMA node1 CPU(s):                    48-95
Vulnerability Gather data sampling:   Not affected
Vulnerability Itlb multihit:          Not affected
Vulnerability L1tf:                   Not affected
Vulnerability Mds:                    Not affected
Vulnerability Meltdown:               Not affected
Vulnerability Mmio stale data:        Not affected
Vulnerability Reg file data sampling: Not affected
Vulnerability Retbleed:               Not affected
Vulnerability Spec rstack overflow:   Mitigation; Safe RET
Vulnerability Spec store bypass:      Mitigation; Speculative Store Bypass disabled via prctl
Vulnerability Spectre v1:             Mitigation; usercopy/swapgs barriers and __user pointer sanitization
Vulnerability Spectre v2:             Mitigation; Enhanced / Automatic IBRS; IBPB conditional; STIBP disabled; RSB filling; PBRSB-eIBRS Not affected; BHI Not affected
Vulnerability Srbds:                  Not affected
Vulnerability Tsx async abort:        Not affected

Versions of relevant libraries:
[pip3] flake8==3.7.9
[pip3] numpy==1.24.3
[pip3] torch==2.4.1
[pip3] torchaudio==2.4.1
[pip3] torchvision==0.19.1
[pip3] triton==3.0.0
[conda] blas                      1.0                         mkl  
[conda] ffmpeg                    4.3                  hf484d3e_0    pytorch
[conda] libjpeg-turbo             2.0.0                h9bf148f_0    pytorch
[conda] mkl                       2023.1.0         h213fc3f_46344  
[conda] mkl-service               2.4.0            py38h5eee18b_1  
[conda] mkl_fft                   1.3.8            py38h5eee18b_0  
[conda] mkl_random                1.2.4            py38hdb19cb5_0  
[conda] numpy                     1.24.3           py38hf6e8229_1  
[conda] numpy-base                1.24.3           py38h060ed82_1  
[conda] pytorch                   2.4.1           py3.8_cuda12.1_cudnn9.1.0_0    pytorch
[conda] pytorch-cuda              12.1                 ha16c6d3_5    pytorch
[conda] pytorch-mutex             1.0                        cuda    pytorch
[conda] torchaudio                2.4.1                py38_cu121    pytorch
[conda] torchtriton               3.0.0                      py38    pytorch
[conda] torchvision               0.19.1               py38_cu121    pytorch
        Pillow (10.4.0)

Loading trainer: ZeroshotCLIP
Loading dataset: ImageNet
Loading preprocessed few-shot data from /home/wzk/DATA/imagenet/split_fewshot/shot_-1_shuffled-seed_1.pkl
Cross dataset
Loading dataset: SUN397
Reading split from /home/wzk/DATA/sun397/split_zhou_SUN397.json
Saving preprocessed few-shot data to /home/wzk/DATA/sun397/split_fewshot/shot_-1_shuffled-seed_1.pkl
CROSS DATASET SUBSAMPLE BASE CLASSES!
40
15880
50
19850
Building transform_train
+ random resized crop (size=(224, 224), scale=(0.08, 1.0))
+ random flip
+ to torch tensor of range [0, 1]
+ normalization (mean=[0.48145466, 0.4578275, 0.40821073], std=[0.26862954, 0.26130258, 0.27577711])
Building transform_test
+ resize the smaller edge to 224
+ 224x224 center crop
+ to torch tensor of range [0, 1]
+ normalization (mean=[0.48145466, 0.4578275, 0.40821073], std=[0.26862954, 0.26130258, 0.27577711])
---------  --------
Dataset    ImageNet
# classes  397
# train_x  15,880
# val      19,850
# test     19,850
---------  --------
Loading CLIP (backbone: ViT-B/16)
Prompts: ['a photo of a tennis ball.', 'a photo of a sunglasses.', 'a photo of a grey fox.', 'a photo of a golf cart.', 'a photo of a Labrador Retriever.', 'a photo of a jeep.', 'a photo of a pretzel.', 'a photo of a drink pitcher.', 'a photo of a chameleon.', 'a photo of a daisy.', 'a photo of a beaver.', 'a photo of a radiator grille.', 'a photo of a Shih Tzu.', 'a photo of a product packet / packaging.', 'a photo of a torch.', 'a photo of a shopping basket.', 'a photo of a goblet.', 'a photo of a Entlebucher Sennenhund.', 'a photo of a agaric.', 'a photo of a shoe store.', 'a photo of a movie theater.', 'a photo of a jellyfish.', 'a photo of a eraser.', 'a photo of a suspension bridge.', 'a photo of a bagel.', 'a photo of a tiger beetle.', 'a photo of a African bush elephant.', 'a photo of a chain mail.', 'a photo of a crossword.', 'a photo of a Nile crocodile.', 'a photo of a Clumber Spaniel.', 'a photo of a vestment.', 'a photo of a barn spider.', 'a photo of a hermit crab.', 'a photo of a freight car.', 'a photo of a brussels griffon.', 'a photo of a pickup truck.', 'a photo of a hatchet.', 'a photo of a mosquito net.', 'a photo of a bee.', 'a photo of a snowplow.', 'a photo of a turnstile.', 'a photo of a tape player.', 'a photo of a greenhouse.', 'a photo of a tow truck.', 'a photo of a binoculars.', 'a photo of a catamaran.', 'a photo of a ballpoint pen.', 'a photo of a grey whale.', 'a photo of a fire screen.', 'a photo of a monarch butterfly.', 'a photo of a box turtle.', 'a photo of a half-track.', 'a photo of a beaker.', 'a photo of a analog clock.', 'a photo of a worm snake.', 'a photo of a honeycomb.', 'a photo of a pipe organ.', 'a photo of a umbrella.', 'a photo of a picket fence.', 'a photo of a Bullmastiff.', 'a photo of a little blue heron.', 'a photo of a Cocker Spaniel.', 'a photo of a jacamar.', 'a photo of a sombrero.', 'a photo of a ruffed grouse.', 'a photo of a paintbrush.', 'a photo of a rhinoceros beetle.', 'a photo of a cherimoya (custard apple).', 'a photo of a pelican.', 'a photo of a toilet paper.', 'a photo of a bakery.', 'a photo of a entertainment center.', 'a photo of a hammerhead shark.', 'a photo of a parking meter.', 'a photo of a payphone.', 'a photo of a oystercatcher.', 'a photo of a grey wolf.', 'a photo of a hot pot.', 'a photo of a car wheel.', 'a photo of a Siamese cat.', 'a photo of a violin.', 'a photo of a lemon.', 'a photo of a brown bear.', 'a photo of a orange.', 'a photo of a junco.', 'a photo of a railroad car.', 'a photo of a cowboy hat.', 'a photo of a race car.', 'a photo of a weasel.', 'a photo of a red king crab.', 'a photo of a lawn mower.', 'a photo of a wok.', 'a photo of a military aircraft.', 'a photo of a scuba diver.', 'a photo of a canoe.', 'a photo of a tool kit.', 'a photo of a totem pole.', 'a photo of a jackfruit.', 'a photo of a American black bear.', 'a photo of a plate rack.', 'a photo of a white-headed capuchin.', 'a photo of a maraca.', 'a photo of a radiator.', 'a photo of a water snake.', 'a photo of a slide rule.', 'a photo of a patas monkey.', 'a photo of a red wolf or maned wolf.', 'a photo of a geyser.', 'a photo of a borzoi.', 'a photo of a Bernese Mountain Dog.', 'a photo of a Golden Retriever.', 'a photo of a European polecat.', 'a photo of a trolleybus.', 'a photo of a hook.', 'a photo of a candy store.', 'a photo of a bath towel.', 'a photo of a hair spray.', 'a photo of a leatherback sea turtle.', 'a photo of a sawmill.', 'a photo of a swimming cap.', 'a photo of a grasshopper.', 'a photo of a parachute.', 'a photo of a car mirror.', 'a photo of a hare.', 'a photo of a can opener.', 'a photo of a knee pad.', 'a photo of a rooster.', 'a photo of a baluster / handrail.', 'a photo of a Miniature Poodle.', 'a photo of a kingsnake.', 'a photo of a indri.', 'a photo of a Kerry Blue Terrier.', 'a photo of a silver salmon.', 'a photo of a trimaran.', 'a photo of a Tibetan Terrier.', 'a photo of a black swan.', 'a photo of a vine snake.', 'a photo of a bell or wind chime.', 'a photo of a wardrobe.', 'a photo of a albatross.', 'a photo of a odometer.', 'a photo of a lionfish.', 'a photo of a wallet.', 'a photo of a cicada.', 'a photo of a Saluki.', 'a photo of a American Staffordshire Terrier.', 'a photo of a suit.', 'a photo of a rotisserie.', 'a photo of a chickadee.', 'a photo of a sock.', 'a photo of a sidewinder rattlesnake.', 'a photo of a ski.', 'a photo of a bookcase.', 'a photo of a collie.', 'a photo of a knot.', 'a photo of a ring-necked snake.', 'a photo of a Great Dane.', 'a photo of a shipwreck.', 'a photo of a pencil case.', 'a photo of a motorboat.', 'a photo of a vulture.', 'a photo of a marmot.', 'a photo of a gas mask or respirator.', 'a photo of a space heater.', 'a photo of a cassette.', 'a photo of a snail.', 'a photo of a Redbone Coonhound.', 'a photo of a badger.', 'a photo of a pajamas.', 'a photo of a farm plow.', 'a photo of a dumbbell.', 'a photo of a fire salamander.', 'a photo of a snow leopard.', 'a photo of a Giant Schnauzer.', 'a photo of a goldfinch.', 'a photo of a acorn.', 'a photo of a ocean liner.', 'a photo of a Bouvier des Flandres dog.', 'a photo of a police van.', 'a photo of a miniskirt.', 'a photo of a Boxer.', 'a photo of a hyena.', 'a photo of a wolf spider.', 'a photo of a website.', 'a photo of a tandem bicycle.', 'a photo of a harp.', 'a photo of a eastern diamondback rattlesnake.', 'a photo of a sulphur-crested cockatoo.', 'a photo of a clownfish.', 'a photo of a Pekingese.', 'a photo of a computer mouse.', 'a photo of a balloon.', 'a photo of a meerkat.', 'a photo of a block plane.', 'a photo of a Scottish Terrier.', 'a photo of a container ship.', 'a photo of a green iguana.', 'a photo of a Curly-coated Retriever.', 'a photo of a digital clock.', 'a photo of a cucumber.', 'a photo of a ring binder.', 'a photo of a cassette player.', 'a photo of a rugby ball.', 'a photo of a magnetic compass.', 'a photo of a Standard Poodle.', 'a photo of a guenon.', 'a photo of a yurt.', 'a photo of a neck brace.', 'a photo of a espresso.', 'a photo of a folding chair.', 'a photo of a swim trunks / shorts.', 'a photo of a fur coat.', 'a photo of a cheetah.', 'a photo of a typewriter keyboard.', 'a photo of a brain coral.', 'a photo of a killer whale.', 'a photo of a goose.', "a photo of a Geoffroy's spider monkey.", 'a photo of a ox.', 'a photo of a crane bird.', 'a photo of a Dutch oven.', 'a photo of a Tibetan Mastiff.', 'a photo of a limpkin.', 'a photo of a hand-held computer.', 'a photo of a toy terrier.', 'a photo of a bra.', 'a photo of a gibbon.', 'a photo of a sunscreen.', 'a photo of a vaulted or arched ceiling.', 'a photo of a gorilla.', 'a photo of a airship.', 'a photo of a cardoon.', 'a photo of a trifle.', 'a photo of a wool.', 'a photo of a toy store.', 'a photo of a acorn squash.', 'a photo of a American alligator.', 'a photo of a warthog.', 'a photo of a Norwich Terrier.', 'a photo of a spider web.', 'a photo of a screwdriver.', 'a photo of a diaper.', 'a photo of a Irish Terrier.', 'a photo of a marimba.', 'a photo of a cardboard box / carton.', 'a photo of a guinea pig.', 'a photo of a pug.', 'a photo of a sports car.', 'a photo of a Egyptian Mau.', 'a photo of a metal nail.', 'a photo of a scabbard.', 'a photo of a tram.', 'a photo of a espresso machine.', 'a photo of a trombone.', 'a photo of a scarf.', 'a photo of a bridegroom.', 'a photo of a Staffordshire Bull Terrier.', 'a photo of a quill.', 'a photo of a Briard.', 'a photo of a ice cream.', 'a photo of a tench.', 'a photo of a loupe magnifying glass.', 'a photo of a mink.', 'a photo of a Great Pyrenees dog.', 'a photo of a Schipperke.', 'a photo of a chiffonier.', 'a photo of a dog sled.', 'a photo of a apiary.', 'a photo of a padlock.', 'a photo of a trilobite.', 'a photo of a Windsor tie.', 'a photo of a stingray.', 'a photo of a mobile home.', 'a photo of a mortar and pestle.', 'a photo of a smooth green snake.', 'a photo of a paper towel.', 'a photo of a titi monkey.', 'a photo of a Alpine ibex.', 'a photo of a lotion.', 'a photo of a African rock python.', 'a photo of a Brittany dog.', 'a photo of a dishwasher.', 'a photo of a Border Terrier.', 'a photo of a mobile phone.', 'a photo of a milk can.', 'a photo of a printer.', 'a photo of a otter.', 'a photo of a hot tub.', 'a photo of a ruddy turnstone.', 'a photo of a pedestal.', 'a photo of a bolo tie.', 'a photo of a southern black widow.', 'a photo of a king penguin.', 'a photo of a Band-Aid.', 'a photo of a pan flute.', 'a photo of a crayfish.', 'a photo of a American robin.', 'a photo of a vase.', 'a photo of a cardigan.', 'a photo of a slip-on shoe.', 'a photo of a trash can.', 'a photo of a duck.', 'a photo of a coral reef.', 'a photo of a sturgeon.', 'a photo of a church.', 'a photo of a white stork.', 'a photo of a dowitcher.', 'a photo of a Chihuahua.', 'a photo of a trench coat.', 'a photo of a Chesapeake Bay Retriever.', 'a photo of a joystick.', 'a photo of a weevil.', 'a photo of a boa constrictor.', 'a photo of a sea anemone.', 'a photo of a desktop computer.', 'a photo of a lacewing.', 'a photo of a china cabinet.', 'a photo of a stone wall.', 'a photo of a Treeing Walker Coonhound.', 'a photo of a marmoset.', 'a photo of a barbell.', 'a photo of a wine bottle.', 'a photo of a Boston Terrier.', 'a photo of a guacamole.', 'a photo of a Granny Smith apple.', 'a photo of a minibus.', 'a photo of a tricycle.', 'a photo of a scoreboard.', 'a photo of a doormat.', 'a photo of a military uniform.', 'a photo of a triceratops.', 'a photo of a red admiral butterfly.', 'a photo of a flamingo.', 'a photo of a banana.', 'a photo of a Mexican hairless dog (xoloitzcuintli).', 'a photo of a pole.', 'a photo of a kit fox.', 'a photo of a rickshaw.', 'a photo of a carousel.', 'a photo of a Miniature Schnauzer.', 'a photo of a Weimaraner.', 'a photo of a gossamer-winged butterfly.', 'a photo of a Australian Silky Terrier.', 'a photo of a manhole cover.', 'a photo of a accordion.', 'a photo of a chocolate syrup.', 'a photo of a lion.', 'a photo of a recreational vehicle.', 'a photo of a medicine cabinet.', 'a photo of a poke bonnet.', 'a photo of a centipede.', 'a photo of a bottle cap.', 'a photo of a Australian Terrier.', 'a photo of a velvet fabric.', 'a photo of a mitten.', 'a photo of a disc brake.', 'a photo of a Indian cobra.', 'a photo of a frilled-necked lizard.', 'a photo of a leaf beetle.', 'a photo of a thatched roof.', 'a photo of a mop.', 'a photo of a black-footed ferret.', 'a photo of a peafowl.', 'a photo of a popsicle.', 'a photo of a tiger cat.', 'a photo of a keyboard space bar.', 'a photo of a dust jacket.', 'a photo of a Japanese Chin.', 'a photo of a Rhodesian Ridgeback.', 'a photo of a burrito.', 'a photo of a Asian elephant.', 'a photo of a ptarmigan.', 'a photo of a Wire Fox Terrier.', 'a photo of a muzzle.', 'a photo of a mask.', 'a photo of a projector.', 'a photo of a sneaker.', 'a photo of a sewing machine.', 'a photo of a dunlin.', 'a photo of a porcupine.', 'a photo of a baboon.', 'a photo of a cricket insect.', 'a photo of a cougar.', 'a photo of a saxophone.', 'a photo of a Vizsla.', 'a photo of a soda bottle.', 'a photo of a planetarium.', 'a photo of a combine harvester.', 'a photo of a ambulance.', 'a photo of a Basenji.', 'a photo of a sarong.', 'a photo of a American lobster.', 'a photo of a sea slug.', 'a photo of a langur.', 'a photo of a gas pump.', 'a photo of a water jug.']
Loading evaluator: Classification
Note that load_model() is skipped as no pretrained model is given (ignore this if it's done on purpose)
Evaluate on the *test* set
=> result
* total: 19,850
* correct: 15,252
* accuracy: 76.8%
* error: 23.2%
* macro_f1: 76.5%
